library(dplyr)
library(ggplot2)
library(devtools)
library(readr)
library(reshape2)
library(cowplot)
library(corrplot)

install.packages("corrplot")

###First we must take care of the set of Weather data, measuring windspeed and temperature at different sites
###However the existing colnames och variables names showed off to be hard to work with
### Therefore we decided to import them unamed, and to skip the first row(which orginally was used for colnames)

WeatherX <- read_csv("Weather.csv" , skip =1 ,  col_names = FALSE)

### After this I renamed the variables of interest

Weather1 <- WeatherX %>% 
  rename(parameter_name = X10, mean = X18, date = X13 , local_site = X24 )

### I then filtered out the observations from the measuring site of interest

Weather2 <- Weather1 %>%
  filter(local_site == "Clinton")

#### Then I separated the datafile into two subsets, depending on which parameter that was measured 

Weather_temp <- Weather2 %>%
  filter(parameter_name == "Outdoor Temperature" )

Weather_wind <- Weather2 %>% 
  filter(parameter_name == "Wind Speed - Resultant")
#### After that we rename mean values, so we know what they are supposed to measure
Weather_temp2 <- Weather_temp %>%
  rename(temp_mean = mean)

Weather_wind2 <- Weather_wind %>%
  rename(WS_mean = mean)



#### I then I had to group them together again



Weather_rejoin <- inner_join(
  Weather_temp2, Weather_wind2 , by = c("date", "local_site"))

####singel out the wanted variables

Weather_rejoin2 <- Weather_rejoin %>%
  select("date" , "WS_mean", "temp_mean" , "local_site")

#########fix the two other CSV files
#### starting with Pollution 
### doing the same steps as with weather####
PollutionX <-read_csv("Pollution.csv" , skip =1 ,  col_names = FALSE)

Pollution1 <- PollutionX %>% 
  filter(X24 == "Clinton")
#######
Pollution2 <- Pollution1 %>% 
  rename(parameter_name = X10, mean = X18, date = X13 , local_site = X24 )

#######

Pollution_ozon <- Pollution2 %>%
  filter(parameter_name == "Ozone" )

Pollution_Nitro <- Pollution2 %>% 
  filter(parameter_name == "Nitrogen dioxide (NO2)")
##################################
Pollution_ozon2 <- Pollution_ozon %>%
  rename(O_mean = mean)

Pollution_Nitro2 <- Pollution_Nitro %>%
  rename(N_mean = mean)

###########

Pollution_rejoin <- inner_join(
  Pollution_ozon2, Pollution_Nitro2 , by = c("date", "local_site"))
#########
Pollution_rejoin2 <- Pollution_rejoin %>%
  select("date" , "N_mean", "O_mean" , "local_site")

#### Last but not least AQI

AQImap <- read_csv("AQI.csv")

AQIX <- read_csv("AQI.csv" , skip =1 ,  col_names = FALSE)

#### renaming

AQI1 <- AQIX %>% 
  rename(county_name = X3, AQI_num = X7, date = X6 , AQI_cat = X8 )


#### single out the right county specific data 

AQI2 <- AQI1 %>%
  filter(county_name == "Harris")

###rename county name to local site

AQI3 <- AQI2 %>%
  rename(local_site = county_name)

AQI_final <-AQI3 %>%
  select( "AQI_num" , "date", "AQI_cat")


#### the files of intreset are called "meteorologi2" "smuts2" and "AQI_final"

#### however the files got different numbers of observations, I will try to inner join the different CSV files 
#### -- and hope that the missing observations will show as observations with different NA values

PART3_join <- inner_join(
  AQI_final , Pollution_rejoin2,  by = c("date" )
) 

PART3_join2 <- inner_join(
  PART3_join, Weather_rejoin2, by = c("date", "local_site")
)

##########
PART3 <- PART3_join2
365*2

plot(PART3$date, PART3$N_mean)
#####


da <- seq(as.Date('2016-01-01'),as.Date('2017-12-31'),by = 1)


## lost data algorithm 

for(i in 1:length(da)){
  h <-  as.data.frame(da %in% PART3$date)
  if(hj[i,] == "FALSE"){
    print(da[i])
  } 
}

## Convert the temperature variable into celsius
PART3 <- PART3 %>% 
  mutate(dummy = ifelse(PART3$AQI_cat == "Good" | PART3$AQI_cat == "Moderate", "Good", "Bad")) %>% 
  mutate(weighted_ozon = PART3$O_mean*500)


library(ggplot2)
library(dplyr)
library(weathermetrics)

PART3$temp_mean_celsius <- fahrenheit.to.celsius(PART3$temp_mean)



PART3 %>%  ggplot() +
  geom_point(aes(y = temp_mean_celsius, x = date), color = "blue", shape = 15, size = z) +
  geom_smooth(aes(y = temp_mean_celsius, x = date), colour = "blue") + 
  geom_point(aes(y = WS_mean, x = date), color = "green", shape = 16, size = z) + 
  geom_smooth(aes(y = WS_mean, x = date), color = "green") +
  geom_point(aes(y = N_mean, x = date), color = "red", shape = 17, size = z) + 
  geom_smooth(aes(y = N_mean, x = date), color = "red") +
  geom_point(aes(y = weighted_ozon, x = date), color = "orange", shape = 18, size = z) + 
  geom_smooth(aes(y = weighted_ozon, x = date), color = "orange") 


install.packages("RColorBrewer")
install.packages("viridis")  # Install
library("viridis") 
library("RColorBrewer")

weather <- read_csv("Weather.csv")

colnames(weather) <- make.names(colnames(weather), TRUE)

clean <- weather %>% 
  filter(Local.Site.Name == "Clinton", Parameter.Name == "Outdoor Temperature") %>% 
  rename(Temp.mean = Arithmetic.Mean, Date = Date.Local)

clean1 <- weather %>% 
  filter(Local.Site.Name == "Clinton", Parameter.Name == "Wind Speed - Resultant") %>% 
  rename(WS.mean = Arithmetic.Mean, Date = Date.Local)

weather <- inner_join(clean, clean1, by = c("Date", "Local.Site.Name")) %>% 
  select("Date", "WS.mean", "Temp.mean", "Local.Site.Name")

########################

pollution <- read_csv("Pollution.csv")

colnames(pollution) <- make.names(colnames(pollution), TRUE)

clean <- pollution %>% 
  filter(Local.Site.Name == "Clinton", Parameter.Name == "Ozone") %>% 
  rename(Ozone.mean = Arithmetic.Mean, Date = Date.Local)

clean1 <- pollution %>% 
  filter(Local.Site.Name == "Clinton", Parameter.Name == "Nitrogen dioxide (NO2)") %>% 
  rename(N02.mean = Arithmetic.Mean, Date = Date.Local)

pollution <- inner_join(clean, clean1, by = c("Date", "Local.Site.Name")) %>% 
  select("Date", "N02.mean", "Ozone.mean", "Local.Site.Name")

########################################################

aqi <- read_csv("AQI.csv")

colnames(aqi) <- make.names(colnames(aqi), TRUE)

aqi <- aqi %>% 
  filter(county.Name == "Harris") %>%
  select( "Category" , "Date")

data <- inner_join(aqi, pollution, by = c("Date"))

data <- inner_join(data, weather, by = c("Date", "Local.Site.Name"))

data <- data %>% 
  mutate(dummy = ifelse(data$Category == "Good" | data$Category == "Moderate", "Good", "Bad")) %>% 
  mutate(weighted.ozone = data$Ozone.mean*500)

data$Temp.mean.celsius <- fahrenheit.to.celsius(data$Temp.mean)






# Plot to use 



obs_size  = 0.9
line_size = 1.5

ggplot(data, mapping = aes(x = Date)) + 
  geom_point(mapping = aes(y = Temp.mean.celsius, color = "Temperature", shape = "Temperature"), size = obs_size) + 
  geom_point(mapping = aes(y = WS.mean, color = "Wind speed", shape = "Wind speed"), size = obs_size) + 
  geom_point(mapping = aes(y = weighted.ozone, color = "Ozone", shape = "Ozone"), size = obs_size) + # change shapes
  geom_point(mapping = aes(y = N02.mean, color = "NO2", shape = "NO2"), size = obs_size) + 
  geom_smooth(mapping = aes(y = Temp.mean.celsius, color = "Temperature"), size = line_size) + 
  geom_smooth(mapping = aes(y = WS.mean, colour = "Wind speed"), size = line_size) +
  geom_smooth(mapping = aes(y = weighted.ozone, colour = "Ozone"), size = line_size) + 
  geom_smooth(mapping = aes(y = N02.mean, colour = "NO2"), size = line_size) +
  scale_shape_manual(values = c(15, 16, 17, 18), labels = c("NO2", "Ozone", "Temperature", "Wind speed")) +
  theme_minimal() +
  scale_color_manual(values = c("darkgreen", "darkblue", "green", "darkturquoise"), labels = c("NO2", "Ozone", "Temperature", "Wind speed")) +
  labs(y = "Level of variables",
       x = "Date",
       colour = "Parameter", 
       title = "Time series data showing the relationship between NO2, Ozone, Temperature and Wind speed over 2016-01-01 to 2017-12-31 in Texas", 
       subtitle = "Scatterplot and smoothed line graph of weather and pollution variables.", 
       caption = "Ozone and NO2 measured in ppb, temperature in C\u00B0 and wind speed in knots.") +
  guides(shape = FALSE) + 
  theme(legend.position = "bottom", legend.title=element_blank()) 


# <---- fixa namn och variablennamn


yolo <- PART3 %>% 
  select(c("N_mean","weighted_ozon", "date", "WS_mean", "temp_mean_celsius"))

lol <- melt(yolo, id = c("date"))
print(lol)

ggplot(lol, aes(x = date)) +
  geom_point(aes(y = value)) +
  facet_grid(rows = lol$variable) +
  labs(y = "Values",
       x = "Date",
       title = "Figure", 
       subtitle = "Assignment", 
       caption = "Yo to the fucking lo")




# Analysis - relationship between weather and pollution variables

corrdata <-  data  %>% 
  select (c("Temp.mean.celsius", "N02.mean", "weighted.ozone"))

cor(corrdata)

myregressnit <- lm(data$N02.mean ~ data$Temp.mean.celsius)
summary(myregressnit)$r.squared

myregresso <- lm(data$N02.mean ~ data$weighted.ozone)
summary(myregresso)$r.squared

myregressoandn <- lm(data$weighted.ozone ~ data$Temp.mean.celsius)
summary(myregressoandn)$r.squared


corrplot(cor(corrdata), type = "upper", order = "hclust",
         col = c("black", "white"), bg = "lightblue")





temperaturebox <-  ggplot(data = data, mapping = aes(y = Temp.mean.celsius, x = Category, fill = Category)) +
  geom_boxplot(show.legend = FALSE) +
  labs(y = "Temperature measured in C\u00B0",
       fill = "Air quality category", 
       title = "Relationship between air quality and temperature") +
  theme(plot.title = element_text(size=14)) + 
  theme(axis.title.x=element_blank())

ozonebox <-  ggplot(data = data, mapping = aes(y = weighted.ozone, x = Category, fill = Category)) +
  geom_boxplot(show.legend = FALSE) +
  labs(y = "Weighted ozone level",
       fill = "Air quality Category", 
       title = "Relationship between air quality and ozone level") +
  theme(plot.title = element_text(size=14)) + 
  theme(axis.title.x=element_blank())


nitrogenbox <-  ggplot(data = data, mapping = aes(y = N02.mean, x = Category, fill = Category)) +
  geom_boxplot(show.legend = FALSE) +
  labs(y = "Nitrogen level",
       fill = "Air quality category", 
       title = "Relationship between air quality and nitrogen level") +
  theme(plot.title = element_text(size=14)) + 
  theme(axis.title.x=element_blank())

windbox <- ggplot(data = data, mapping = aes(y = WS.mean, x = Category, fill = Category)) +
  geom_boxplot(show.legend = FALSE) +
  labs(y = "Wind speed in knots",
       fill = "Air quality category", 
       title = "Relationship between air quality and wind speed") +
  theme(plot.title = element_text(size=14)) + 
  theme(axis.title.x=element_blank())

plot_grid(temperaturebox, ozonebox, nitrogenbox, windbox)

##### plots with only dummy variables 

dummytemperaturebox <-  ggplot(data = data, mapping = aes(y = Temp.mean.celsius, x = dummy, fill = dummy)) +
  geom_boxplot(show.legend = FALSE) +
  labs(y = "Temperature measured in C\u00B0",
       fill = "Air quality category", 
       title = "Relationship between air quality and temperature") +
  theme(plot.title = element_text(size=14)) + 
  theme(axis.title.x=element_blank())

dummyozonebox <-  ggplot(data = data, mapping = aes(y = weighted.ozone, x = dummy, fill = dummy)) +
  geom_boxplot(show.legend = FALSE) +
  labs(y = "Weighted ozone level",
       fill = "Air quality category", 
       title = "Relationship between air quality and ozone level") +
  theme(plot.title = element_text(size=14)) + 
  theme(axis.title.x=element_blank())



dummynitrogenbox <-  ggplot(data = data, mapping = aes(y = N02.mean, x = dummy, fill = dummy)) +
  geom_boxplot(show.legend = FALSE) +
  labs(y = "Nitrogen level",
       fill = "Air quality category", 
       title = "Relationship between air quality and nitrogen level") +
  theme(plot.title = element_text(size=14)) + 
  theme(axis.title.x=element_blank())

dummywindbox <- ggplot(data = data, mapping = aes(y = WS.mean, x = dummy, fill = dummy)) +
  geom_boxplot(show.legend = FALSE) +
  labs(y = "Wind speed in knots",
       fill = "Air quality category", 
       title = "Relationship between air quality and wind speed") +
  theme(plot.title = element_text(size=14)) + 
  theme(axis.title.x=element_blank())

plot_grid(dummytemperaturebox, dummyozonebox, dummynitrogenbox, dummywindbox)


# <----- Scatter plots


firstscatter <- ggplot(data) + 
  geom_point(mapping = aes(x = Category, y = Temp.mean.celsius, color = Category), show.legend = FALSE) + 
  labs(y = "Temperature measured in C\u00B0",
       fill = "Air quality category", 
       title = "Relationship between air quality and temperature") +
  theme(plot.title = element_text(size=14)) + 
  theme(axis.title.x=element_blank())


secondscatter <- ggplot(data) + 
  geom_point(mapping = aes(x = Category, y = weighted.ozone, color = Category), show.legend = FALSE) + 
  labs(y = "Weighted ozone level",
       fill = "Air quality category", 
       title = "Relationship between air quality and ozone level") +
  theme(plot.title = element_text(size=14)) + 
  theme(axis.title.x=element_blank())

thirdscatter <- ggplot(data) + 
  geom_point(mapping = aes(x = Category, y = N02.mean, color = Category), show.legend = FALSE) +
  labs(y = "Nitrogen level",
       fill = "Air quality category", 
       title = "Relationship between air quality and nitrogen level") +
  theme(plot.title = element_text(size=14)) + 
  theme(axis.title.x=element_blank())

fourthscatter <- ggplot(data) + 
  geom_point(mapping = aes(x = Category, y = WS.mean, color = Category), show.legend = FALSE) + 
  labs(y = "Wind speed in knots",
       fill = "Air quality category", 
       title = "Relationship between air quality and wind speed") +
  theme(plot.title = element_text(size=14)) + 
  theme(axis.title.x=element_blank())


plot_grid(firstscatter, secondscatter, thirdscatter, fourthscatter)

## dummy 

firstscatterdummy <- ggplot(data) + 
  geom_point(mapping = aes(x = Category, y = temp_mean_celsius, color = AQI_cat), show.legend = FALSE) + 
  labs(y = "Temperature measured in C\u00B0",
       fill = "Air quality category", 
       title = "Relationship between air quality and temperature") +
  theme(plot.title = element_text(size=14)) + 
  theme(axis.title.x=element_blank())


secondscatter <- ggplot(data) + 
  geom_point(mapping = aes(x = Category, y = Temp.mean.celsius, color = Category), show.legend = FALSE) + 
  labs(y = "Weighted ozone level",
       fill = "Air quality category", 
       title = "Relationship between air quality and ozone level") +
  theme(plot.title = element_text(size=14)) + 
  theme(axis.title.x=element_blank())

thirdscatter <- ggplot(PART3) + 
  geom_point(mapping = aes(x = AQI_cat, y = N_mean, color = AQI_cat), show.legend = FALSE) +
  labs(y = "Nitrogen level",
       fill = "Air quality category", 
       title = "Relationship between air quality and nitrogen level") +
  theme(plot.title = element_text(size=14)) + 
  theme(axis.title.x=element_blank())

fourthscatter <- ggplot(PART3) + 
  geom_point(mapping = aes(x = AQI_cat, y = WS_mean, color = AQI_cat), show.legend = FALSE) + 
  labs(y = "Wind speed in knots",
       fill = "Air quality category", 
       title = "Relationship between air quality and wind speed") +
  theme(plot.title = element_text(size=14)) + 
  theme(axis.title.x=element_blank())


plot_grid(firstscatter, secondscatter, thirdscatter, fourthscatter)
